<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TryHackMe on Scorpiosec</title><link>https://scorpiosec.com/tags/tryhackme/</link><description>Recent content in TryHackMe on Scorpiosec</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 25 Feb 2025 21:16:11 -0600</lastBuildDate><atom:link href="https://scorpiosec.com/tags/tryhackme/index.xml" rel="self" type="application/rss+xml"/><item><title>THM: Rabbit Store</title><link>https://scorpiosec.com/posts/thm-rabbit_store/</link><pubDate>Tue, 25 Feb 2025 21:16:11 -0600</pubDate><guid>https://scorpiosec.com/posts/thm-rabbit_store/</guid><description>Platform: TryHackMe Link: Rabbit Store Level: Medium OS: Linux Rabbit Store presents a couple of uncommon services. The challenge begins with identifying a mass assignment vulnerability in an API, which is then leveraged alongside an SSRF vulnerability to retrieve the API documentation. One of the discovered endpoints is vulnerable to SSTI, allowing us to gain initial access to the target system. Through enumeration, we uncover an Erlang cookie, enabling us to pivot to another user.</description></item><item><title>THM: You Got Mail</title><link>https://scorpiosec.com/posts/thm-you-got-mail/</link><pubDate>Sun, 09 Feb 2025 14:59:41 -0600</pubDate><guid>https://scorpiosec.com/posts/thm-you-got-mail/</guid><description>Platform: TryHackMe Link: You Got Mail Level: Medium OS: Windows This room focuses on a phishing attack. After collecting an email list, we use cewl to create a customized password list. Hydra, successfully recovers the password for one of the email accounts. With swaks, we send a phishing email that results in a reverse shell on the target system. From there, we retrieve the password for a user account as well as the admin password for hMailServer.</description></item><item><title>THM: Smol</title><link>https://scorpiosec.com/posts/thm-smol/</link><pubDate>Mon, 27 Jan 2025 11:31:43 -0600</pubDate><guid>https://scorpiosec.com/posts/thm-smol/</guid><description>Platform: TryHackMe Link: Smol Level: Medium OS: Linux Smol focuses on exploiting vulnerabilities in WordPress plugins. The challenge begins with enumerating a WordPress site using WPScan, where we discover a plugin vulnerable to Local File Inclusion (LFI). This allows us to extract credentials and log into the WordPress dashboard. Within the dashboard, a private note directs us to the source code of the Hello Dolly plugin, which contains a backdoor.</description></item><item><title>THM: Silver Platter</title><link>https://scorpiosec.com/posts/thm-silverplatter/</link><pubDate>Mon, 13 Jan 2025 21:00:11 -0600</pubDate><guid>https://scorpiosec.com/posts/thm-silverplatter/</guid><description>Platform: TryHackMe Link: Silver Platter Level: Easy OS: Linux Silver Platter is a straightforward machine that begins with http services running on two different ports, one of which reveals a potential username. Through enumeration, we discover a Silverpeas login page and use a custom password list to identify valid credentials, granting access to the dashboard. Further research helps us find CVE-2023-47323, which we use to obtain another set of credentials and an initial foothold.</description></item><item><title>THM: Airplane</title><link>https://scorpiosec.com/posts/thm-airplane/</link><pubDate>Wed, 11 Dec 2024 17:41:30 -0600</pubDate><guid>https://scorpiosec.com/posts/thm-airplane/</guid><description>Platform: TryHackMe Link: Airplane Level: Medium OS: Linux The challenge Airplane begins by uncovering a Local File Inclusion (LFI) vulnerability. By exploiting it, we enumerate the target’s running processes and identify one linked to GdbServer. Using an ELF binary crafted with msfvenom, we exploit this tool to gain an initial foothold on the system. Further enumeration reveals a binary with the SUID bit set, enabling us to pivot to another user and retrieve the user flag.</description></item><item><title>THM: The Sticker Shop</title><link>https://scorpiosec.com/posts/thm-thestickershop/</link><pubDate>Wed, 04 Dec 2024 16:26:19 -0600</pubDate><guid>https://scorpiosec.com/posts/thm-thestickershop/</guid><description>Platform: TryHackMe Link: The Sticker Shop Level: Easy This is a pretty straightforward room where we need to leverage a Cross-Site Scripting vulnerability in order to read the flag.
Scanning ./nmap_scan.sh &amp;lt;IP_PROVIDED&amp;gt; The_Sticker_Shop You can find the script I use to scan targets here.
Results
Running detailed scan on open ports: 22,8080 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-12-04 16:38 CST Nmap scan report for 10.10.139.96 Host is up (0.</description></item><item><title>THM: SeeTwo</title><link>https://scorpiosec.com/posts/thm-seetwo/</link><pubDate>Mon, 04 Nov 2024 12:11:25 -0600</pubDate><guid>https://scorpiosec.com/posts/thm-seetwo/</guid><description>Platform: TryHackMe Link: SeeTwo Level: Medium In this room we have to investigate a pcap file. At first we find what looks like some benign traffic, however after digging deeper we find an ELF binary containing some .pyc files. Decompiling one the file allows us to understand the tactics used by the attacker, and with a python script we find all the information we need.
Investigation Right after loading the pcap file, we get an overview of the traffic.</description></item><item><title>THM: Rabbit Hole</title><link>https://scorpiosec.com/posts/thm-rabbithole/</link><pubDate>Tue, 29 Oct 2024 19:25:05 -0500</pubDate><guid>https://scorpiosec.com/posts/thm-rabbithole/</guid><description>Platform: TryHackMe Link: Rabbit Hole Level: Hard OS: Linux Rabbit Hole is all about exploiting SQL injection. We discover a second-order SQL injection vulnerability after some failed Cross-Site scripting (XSS) attempts. Using this, we retrieve some password hashes, but they don’t lead to initial access. By combining a python script and a payload leveraging the PROCESSLIST command we successfully extract the query containing the admin user password which we use to login via SSH and read the flag.</description></item><item><title>THM: K2</title><link>https://scorpiosec.com/posts/thm-k2/</link><pubDate>Thu, 24 Oct 2024 14:16:05 -0500</pubDate><guid>https://scorpiosec.com/posts/thm-k2/</guid><description>Platform: TryHackMe Link: K2 Level: Hard OS: Linux and Windows (The room has three different machines) Base Camp The Base Camp machine in the K2 challenge starts with a basic website. Initial enumeration reveals two subdomains linked to a ticketing system, one of which is vulnerable to Cross-Site Scripting (XSS). Using XSS, we steal a session cookie to access the admin dashboard, which is also susceptible to SQL injection. This flaw allows us to retrieve admin credentials, granting initial access.</description></item><item><title>THM: Friday Overtime</title><link>https://scorpiosec.com/posts/thm-fridayovertime/</link><pubDate>Thu, 19 Sep 2024 21:09:28 -0500</pubDate><guid>https://scorpiosec.com/posts/thm-fridayovertime/</guid><description>Platform: TryHackMe Link: Friday Overtime Level: Medium For this blue team challenge we need to conduct an investigation and provide answers to some questions.
After launching the provided VM we login with the credentials ericatracy:Intel321!.
Who shared the malware samples? Right after logging in we find a document titled Urgent: Malicious Malware Artefacts Detected.
The author of the document is Oliver Bennett.
Answer: Oliver Bennett
What is the SHA1 hash of the file &amp;ldquo;pRsm.</description></item><item><title>THM: Summit</title><link>https://scorpiosec.com/posts/thm-summit/</link><pubDate>Thu, 29 Aug 2024 21:44:51 -0500</pubDate><guid>https://scorpiosec.com/posts/thm-summit/</guid><description>This is a blue team challenge where we need to create defensive countermeasures for various malware samples. This will be achieved by using file hashes, IP addresses, firewall rules, DNS and sigma rules.
Platform: TryHackMe Link: Summit Level: Easy What is the first flag you receive after successfully detecting sample1.exe? After navigating to the link provided, go to Malware Snadbox, the file sample1.exe is already loaded and click on Submit for Analysis.</description></item><item><title>THM: CyberLens</title><link>https://scorpiosec.com/posts/thm-cyberlens/</link><pubDate>Wed, 19 Jun 2024 14:37:09 -0500</pubDate><guid>https://scorpiosec.com/posts/thm-cyberlens/</guid><description>CyberLens features a website with a metadata extraction feature. After some enumeration we discover that the feature is powered by Apache Tika, an outadated version of the software vulnerable to CVE-2018-1335 is running. We get our initial foothold by exploiting the vulnerability. For privilege escalation we abuse AlwaysInstallElevated to obtain a system shell.
Scanning We will use a Bash script to automate the scanning process. You can find it here.</description></item><item><title>THM: Creative</title><link>https://scorpiosec.com/posts/thm-creative/</link><pubDate>Wed, 17 Apr 2024 22:14:41 -0500</pubDate><guid>https://scorpiosec.com/posts/thm-creative/</guid><description>Platform: TryHackMe Link: Creative Level: Easy OS: Linux The challenge begins with a static website that is unexploitable. Through subdomain enumeration, a URL testing application is uncovered, susceptible to SSRF. However, full exploitation is only possible after discovering an internally exposed port. This access allows for file reading on the server, leading to the retrieval of an SSH private key. Yet, this alone isn&amp;rsquo;t enough to establish a foothold. Success is achieved by cracking the obtained SSH key&amp;rsquo;s hash, granting access to the target system.</description></item><item><title>THM: Clocky</title><link>https://scorpiosec.com/posts/thm-clocky/</link><pubDate>Wed, 10 Apr 2024 13:03:18 -0500</pubDate><guid>https://scorpiosec.com/posts/thm-clocky/</guid><description>Platform: TryHackMe Link: Clocky Level: Medium OS: Linux For this challenge our objective is to locate six flags. Our inital step involves examining the robots.txt file which contains some file extensions. By fuzzing with those file extensions we obtain an archive and extracting it yields the source code of an application. Upon reviewing the code we identify a way to manipulate the application&amp;rsquo;s password reset mechanism, granting us access to the administrative dashboard.</description></item><item><title>THM: Hack Smarter Security</title><link>https://scorpiosec.com/posts/thm-hacksmartersecurity/</link><pubDate>Fri, 22 Mar 2024 16:28:33 -0500</pubDate><guid>https://scorpiosec.com/posts/thm-hacksmartersecurity/</guid><description>Platform: TryHackMe Link: Hack Smarter Security Level: Medium OS: Windows In this challenge we exploit a Windows Server machine feature SSH (which is not usual). After exploiting an uncommon service we find ourselves having to bypass Windows Defender in order to achieve administrative privileges.
The target IP address is 10.10.189.226.
Recon nmap -sC -sV -oA nmap/Hack-Smarter-Security 10.10.189.226 Several ports are found to be opened:
FTP is running on port 21, with anonymous login allowed SSH on port 22, which can potentially be our way into the system if credentials are found A Windows IIS server is running on port 80 From the nmap results it is not clear which service is running on port 1311 Windows WBT server is running on port 3389, this is used for Windows Remote Desktop and Remote Assistance connections Starting Nmap 7.</description></item><item><title>THM: OhSINT</title><link>https://scorpiosec.com/posts/thm-ohsint/</link><pubDate>Tue, 13 Feb 2024 14:31:59 -0600</pubDate><guid>https://scorpiosec.com/posts/thm-ohsint/</guid><description>Platform: TryHackMe Link: OhSINT Level: Easy Type: OSINT This is an OSINT challenge, OSINT stands for Open-Source Intelligence. It&amp;rsquo;s essentially the collection and analysis of publicly available information to gain valuable insights. Think of it like putting together a puzzle using pieces you find scattered around the internet, libraries, or anywhere information is freely accessible.
After downloading the Task Files, with the Download Task Files button you get a single image named WindowsXP.</description></item></channel></rss>